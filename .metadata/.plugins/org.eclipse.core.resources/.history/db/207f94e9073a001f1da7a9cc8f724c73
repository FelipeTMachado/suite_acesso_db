package projeto.gerenciador;

import projeto.estrutura.Coluna;
import projeto.estrutura.Esquema;
import projeto.estrutura.ObjetoRelacional;
import projeto.estrutura.Tabela;

public class GerenciadorScripts {	
	// METODOS FUNCIONAIS
	public static String gerarScriptDDL(ObjetoRelacional objeto, TipoDDL tipo) throws IllegalArgumentException {
		switch (tipo) {
		case CREATE: {
			return construir(objeto);
		}
		default:
			throw new IllegalArgumentException("Valor inesperado: " + tipo);
		}
	}
	
	
	private static String construir(ObjetoRelacional objeto) {
		if (objeto instanceof Esquema) {
			return construirEsquema((Esquema) objeto);
		} 
		
		if (objeto instanceof Tabela) {
			return construirTabela((Tabela) objeto);
		}
		
		if (objeto instanceof Coluna) {
			return construirColuna((Coluna) objeto);
		}
		
		return null;
	}
	
	private static String construirEsquema(Esquema esquema) {
		String sql = "CREATE DATABASE " + esquema.getNome() + ";\n\n";
		
		for (Tabela tabela: esquema.getTabelas()) {
			sql += construirTabela(tabela);
		}
		
		return sql;
	}
	
	private static String construirTabela(Tabela tabela) {
		String sql = "CREATE TABLE " + tabela.getNome() + " (\n";
		
		for (Coluna coluna : tabela.getColunas()) {
			
		}
		
		sql = + ")";
		
		return sql;
	}

	private static String construirColuna(Coluna coluna) {
		
		return "";
	}
}
